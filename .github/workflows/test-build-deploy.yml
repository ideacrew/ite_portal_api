name: Test, Build, Deploy (to DEV)
concurrency:
  group: dev-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - trunk
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: 'Y'
          MSSQL_SA_PASSWORD: 'TesTing1@3'
    steps:
      - uses: actions/checkout@v3
      - name: Install FreeTDS
        run: |
          sudo apt install -y freetds-dev
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Run Rspec
        env:
          ITE_PORTAL_API_DATABASE_HOST: '127.0.0.1'
          ITE_PORTAL_API_DATABASE_USERNAME: 'sa'
          ITE_PORTAL_API_DATABASE_PASSWORD: 'TesTing1@3'
          ITE_PORTAL_API_DATABASE_DATABASE: 'ite_portal_api_test'
          RAILS_ENV: test
        run: |
          bin/rails db:drop
          bin/rails db:create
          bin/rails db:migrate
          bin/rails db:seed
          bundle exec rspec --format d
          bin/rails db:drop
  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: docker/login-action@v2
        with:
          registry: "public.ecr.aws"
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build Image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          # Set the desired build target here
          push: ${{ github.event_name != 'pull_request' }}
          tags: public.ecr.aws/ideacrew/ite-portal-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy-to-awsecs:
    needs: [build]
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v3
      - name: Install FreeTDS
        run: |
          sudo apt install -y freetds-dev
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      # - name: Update DB
      #   env:
      #     ITE_PORTAL_API_DATABASE_HOST: ${{ secrets.PROVIDER_GATEWAY_API_DATABASE_HOST }}
      #     ITE_PORTAL_API_DATABASE_USERNAME: ${{ secrets.PROVIDER_GATEWAY_API_DATABASE_USERNAME }}
      #     ITE_PORTAL_API_DATABASE_PASSWORD: ${{ secrets.PROVIDER_GATEWAY_API_DATABASE_PASSWORD }}
      #     ITE_PORTAL_API_DATABASE_DATABASE: 'ite_portal_api_development'
      #     RAILS_ENV: production
      #   run: |
      #     bin/rails db:create
      #     bin/rails db:migrate
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy Image on Fargate
        run: |
          aws ecs update-service --cluster "dbh-ite" --service "dbhiteportal-dev-bff" --force-new-deployment
      - name: Wait For Deployment To Complete
        run: |
          sleep 15
          aws ecs wait services-stable --cluster "dbh-ite" --services "dbhiteportal-dev-bff"